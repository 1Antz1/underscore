Function { span: Span { start: Position { line: 1, column: 1, absolute: 0 }, end: Position { line: 5, column: 1, absolute: 38 } }, name: Symbol(0), generic: true, params: [], returns: Nil, body: Block([Expr(TypedExpression { expr: Unary(Minus, TypedExpression { expr: Literal(Number(Number { value: 2, ty: None })), ty: Var(TypeVar(0)) }), ty: Var(TypeVar(0)) }), Expr(TypedExpression { expr: Unary(Bang, TypedExpression { expr: Literal(True(true)), ty: App(Bool, []) }), ty: App(Bool, []) })]), linkage: Normal }
Function { span: Span { start: Position { line: 8, column: 1, absolute: 42 }, end: Position { line: 10, column: 1, absolute: 92 } }, name: Symbol(1), generic: true, params: [FunctionParam { name: Symbol(2), ty: App(Int(Signed, Bit32), []) }], returns: App(Int(Signed, Bit32), []), body: Block([Return(TypedExpression { expr: Binary(TypedExpression { expr: Var(Simple(Symbol(2), App(Int(Signed, Bit32), []))), ty: App(Int(Signed, Bit32), []) }, Star, TypedExpression { expr: Var(Simple(Symbol(2), App(Int(Signed, Bit32), []))), ty: App(Int(Signed, Bit32), []) }), ty: App(Int(Signed, Bit32), []) })]), linkage: Normal }
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
