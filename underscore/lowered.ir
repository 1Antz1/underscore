function ls0() {
    Return(BinOp(t2, Mul, Load(t1), Load(t1)))
    Drop(0)
}
function ls2() {
    BinOp(t6, EQ, Load(t5), Store(t8, Const(0, Signed, Bit32)))
    JumpOp(EQ, Int(2))
    Return(Store(t9, Const(1, Signed, Bit32)))
    Drop(0)
    Jump(Int(3))
    Label(Int(2))
    BinOp(t10, LT, Load(t5), Store(t12, Const(1, Signed, Bit32)))
    JumpOp(LT, Int(5))
    Return(Store(t13, Const(1, Signed, Bit32)))
    Drop(0)
    Jump(Int(6))
    Label(Int(5))
    BinOp(t15, Minus, Load(t5), Store(t17, Const(1, Signed, Bit32)))
    Push(RAX)
    Pop(RDI)
    BinOp(t18, Minus, Load(t5), Store(t20, Const(2, Signed, Bit32)))
    Push(RAX)
    Pop(RDI)
    Return(BinOp(t14, Plus, Call(Named(Symbol(2))), Call(Named(Symbol(2)))))
    Drop(0)
    Label(Int(6))
    Label(Int(3))
    Drop(0)
}
function ls4() {
    Store(t21, Const(0, Signed, Bit32))
    Deref(t21)
    Jump(Int(8))
    Label(Int(7))
    BinOp(t21, Plus, Load(t21), Store(t24, Const(1, Signed, Bit32)))
    Move(t25, RBP(-8))
    Load(t21)
    Push(RAX)
    Pop(RSI)
    Store(t26, Name(Int(10)))
    Push(RAX)
    Pop(RDI)
    Call(Named(Symbol(6)))
    Drop(0)
    Label(Int(8))
    BinOp(t27, LT, Load(t21), Store(t29, Const(10, Signed, Bit32)))
    JumpOp(LT, Int(7))
    Store(t30, Const(0, Signed, Bit32))
    Deref(t30)
    Jump(Int(12))
    Label(Int(11))
    Load(t30)
    Push(RAX)
    Pop(RSI)
    Store(t31, Name(Int(14)))
    Push(RAX)
    Pop(RDI)
    Call(Named(Symbol(6)))
    Drop(0)
    BinOp(t30, Plus, Load(t30), Store(t34, Const(2, Signed, Bit32)))
    Move(t35, RBP(-16))
    Drop(0)
    Label(Int(12))
    BinOp(t36, LT, Load(t30), Store(t38, Const(20, Signed, Bit32)))
    JumpOp(LT, Int(11))
    Drop(1)
    Store(t39, Const(10, Signed, Bit32))
    Push(RAX)
    Pop(RDI)
    Call(Named(Symbol(2)))
    Deref(t39)
    Load(t39)
    Push(RAX)
    Pop(RSI)
    Store(t40, Name(Int(15)))
    Push(RAX)
    Pop(RDI)
    Call(Named(Symbol(6)))
    Drop(2)
}
